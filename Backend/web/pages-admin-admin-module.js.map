{"version":3,"sources":["./src/app/pages/admin/admin.module.ts","./src/app/pages/admin/products/products.component.ts","./src/app/pages/admin/products/products.component.html","./src/app/pages/admin/admin-routing.module.ts","./src/app/pages/admin/departaments/departaments.component.ts","./src/app/pages/admin/departaments/departaments.component.html","./src/app/pages/admin/product/product.component.ts","./src/app/pages/admin/product/product.component.html","./src/app/pages/admin/admin.component.ts","./src/app/pages/admin/admin.component.html"],"names":[],"mappings":"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","file":"pages-admin-admin-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MaterialModule } from 'src/app/material-module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\n\nimport { AdminComponent } from './admin.component';\nimport { ProductsComponent } from './products/products.component';\nimport { DepartamentsComponent } from './departaments/departaments.component';\nimport { AdminRoutingModule } from './admin-routing.module';\nimport { ProductComponent } from './product/product.component';\nimport { NgxDropzoneModule } from 'ngx-dropzone';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MaterialModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AdminRoutingModule,\n    NgxDropzoneModule\n  ],\n  declarations: [\n    AdminComponent,\n    DepartamentsComponent,\n    ProductsComponent,\n    ProductComponent\n  ]\n})\nexport class AdminModule { }\n","import { Component, ViewChild, AfterViewInit, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {merge, of as observableOf} from 'rxjs';\nimport {catchError, map, startWith, switchMap} from 'rxjs/operators';\nimport {ProductsService} from 'src/app/services/products.service'\nimport {Product} from 'src/app/models/products.interface'\n\n\n@Component({\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.scss']\n})\nexport class ProductsComponent implements OnInit {\n  resultsLength = 0;\n  data: Product[] = [];  \n  isLoadingResults = true;\n  displayedColumns: string[] = ['title', 'subtitle','categories', 'price', 'actions'];\n  @ViewChild(MatPaginator) paginator?: MatPaginator;\n  @ViewChild(MatSort) sort?: MatSort;\n  constructor(private products: ProductsService, \n              private router: Router) { }\n\n  ngOnInit() {}\n\n  ngAfterViewInit() {\n      this.load()\n  }\n\n  load() {\n    merge(this.sort.sortChange, this.paginator.page)\n    .pipe(\n      startWith({}),\n      switchMap(() => {\n        this.isLoadingResults = true;\n        return this.products.getProducts(this.paginator?.pageIndex);\n      }),\n      map(data => {\n        // Flip flag to show that loading has finished.\n        this.isLoadingResults = false;\n        this.resultsLength = data.length;\n        return data;\n      }),\n      catchError(() => {\n        this.isLoadingResults = false;\n        return observableOf([]);\n      })\n    ).subscribe(data => this.data = data);\n  }\n\n  remove(row: any) {\n    this.products.deleteProduct(row._id).subscribe(result=> this.load())\n  }\n\n  edit(row: any) {\n    this.router.navigate(['admin','product',row._id])\n  }\n\n  addProduct() {\n    this.router.navigate(['admin','product','new'])\n  }\n\n}","<div class=\"container mat-elevation-z8\">\n  <div class=\"flex flex-center\">\n      <h2>Products</h2>\n      <div class=\"spacer\" ></div>\n      <button \n        mat-fab\n        aria-label=\"add-button\"\n        class=\"add-button\"\n        color=\"primary\"\n        (click)=\"addProduct()\"\n      >\n        <mat-icon>add</mat-icon>\n      </button>\n    </div>  \n      <div *ngIf=\"isLoadingResults\" class=\"flex flex-center\">\n        <mat-spinner *ngIf=\"isLoadingResults\" color=\"primary\" diameter=\"50\"></mat-spinner>\n      </div>\n      <table mat-table [dataSource]=\"data\" class=\"table\"\n             matSort matSortActive=\"title\" matSortDisableClear matSortDirection=\"desc\">\n      \n        <!-- Title Column -->\n        <ng-container matColumnDef=\"title\">\n          <th mat-header-cell *matHeaderCellDef>Title</th>\n          <td mat-cell *matCellDef=\"let row\">{{row.title}}</td>\n        </ng-container>\n  \n        <!-- SubTitle Column -->\n        <ng-container matColumnDef=\"subtitle\">\n          <th mat-header-cell *matHeaderCellDef>Subtitle</th>\n          <td mat-cell *matCellDef=\"let row\">{{row.subtitle | slice: 0: 50}}</td>\n        </ng-container>\n  \n        <!-- Category Column -->\n        <ng-container matColumnDef=\"categories\">\n          <th mat-header-cell *matHeaderCellDef>Categories</th>\n          <td mat-cell *matCellDef=\"let row\">{{row.categories}}</td>\n        </ng-container>\n  \n        <!-- Price Column -->\n        <ng-container matColumnDef=\"price\">\n            <th mat-header-cell *matHeaderCellDef>Price</th>\n            <td mat-cell align=\"right\" *matCellDef=\"let row\">{{row.price | currency }}</td>\n        </ng-container>\n   \n\n        <!-- Actions Column -->\n        <ng-container matColumnDef=\"actions\">\n          <th mat-header-cell *matHeaderCellDef align=\"right\"\n          >\n            Actions\n          </th>\n          <td mat-cell *matCellDef=\"let row\" align=\"right\">\n            <button mat-icon-button>\n              <mat-icon (click)=\"edit(row)\">edit</mat-icon>\n            </button>\n            <button mat-icon-button>\n              <mat-icon (click)=\"remove(row)\">delete</mat-icon>\n            </button>\n          </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n      </table>\n  \n      <div *ngIf=\"resultsLength===0 && !isLoadingResults\" class=\"flex flex-center\">\n        <h2>No products found</h2>\n      </div>\n\n    <mat-paginator [length]=\"resultsLength\" [pageSize]=\"10\"></mat-paginator>\n  </div>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { AdminComponent } from './admin.component';\r\nimport { ProductComponent } from './product/product.component';\r\nimport { ProductsComponent } from './products/products.component';\r\nimport { DepartamentsComponent } from './departaments/departaments.component'\r\n\r\n// import { AuthGuard } from 'src/app/services/auth.guard';\r\n\r\nconst adminRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AdminComponent,\r\n    // canActivate: [AuthGuard],\r\n    children: [\r\n      {\r\n        path: '',\r\n        // canActivateChild: [AuthGuard],\r\n        children: [\r\n          { path: 'categories', component: DepartamentsComponent },\r\n          { path: 'products', component: ProductsComponent },\r\n          { path: 'product/:id', component: ProductComponent },\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forChild(adminRoutes)\r\n  ],\r\n  exports: [\r\n    RouterModule\r\n  ]\r\n})\r\nexport class AdminRoutingModule {}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-departaments',\n  templateUrl: './departaments.component.html',\n  styleUrls: ['./departaments.component.scss']\n})\nexport class DepartamentsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>departaments works!</p>\n","import {COMMA, ENTER} from '@angular/cdk/keycodes';\nimport { Component, OnInit, ElementRef, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators, AbstractControl } from '@angular/forms';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { MatAutocompleteSelectedEvent, MatAutocomplete } from '@angular/material/autocomplete';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ProductsService } from 'src/app/services/products.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-product',\n  templateUrl: './product.component.html',\n  styleUrls: ['./product.component.scss']\n})\nexport class ProductComponent implements OnInit {\n\n  id: string = '';\n  title: string = '';\n  files: File[] = [];\n  categories: string[];\n  allCategories: string[];\n  removable = true;\n  editingImages: boolean = false;\n  separatorKeysCodes: number[] = [ENTER, COMMA];\n\n  @ViewChild('categoryInput') categoryInput: ElementRef<HTMLInputElement>;\n  @ViewChild('auto') matAutocomplete: MatAutocomplete;\n\n  form: FormGroup = this.formBuilder.group({\n    title: ['', [Validators.required, Validators.minLength(2)]],\n    images: ['', [Validators.required]],\n    subtitle: ['', [Validators.required, Validators.minLength(2)]],\n    excerpt: ['', [Validators.required, Validators.minLength(6)]],\n    content: ['', [Validators.required, Validators.minLength(6)]],\n    price: ['', [Validators.required, Validators.pattern(\"^[0-9.,]*$\")]],\n    categories: ['', [Validators.required]]\n  })\n  \n  constructor(private formBuilder: FormBuilder,\n              private products: ProductsService,\n              private active: ActivatedRoute,\n              private snackBar: MatSnackBar,\n              private router: Router\n              ) { }\n\n  ngOnInit(): void {\n    this.logChanges()\n    this.loadCategories()\n    this.loadProduct()\n  }\n\n  openSnackBar(message: string, action: string, callback?: Function) {\n    let ref = this.snackBar.open(message, action, {\n      duration: 2000,\n    });\n    if(callback) {\n      ref.afterDismissed().subscribe(() => callback())\n    }\n  }\n\n  loadProduct() {\n    const params = this.active.snapshot.params\n    if(params.id!=='new')  {\n      this.products.getProductById(params.id)\n          .subscribe(\n            data=> {\n              this.id = data._id\n              this.title = data.title\n              this.form.reset(data)\n            },\n            error=> console.log(error)\n          )\n\n    } else {\n      this.title = 'New Product'\n    }\n  }\n  logChanges() {\n   // this.form.valueChanges.subscribe(data=> console.log(this.form))\n  }\n\n  hasErrors(p: string) {\n    const field=this.form.get(p)\n    return field?.invalid && field?.touched\n  }\n\n  save() {\n    Object.values(this.form.controls)\n    .forEach((control: AbstractControl) => control?.markAllAsTouched());\n    if(this.form.invalid) {\n      return\n    }\n    let request: Observable<any> = !this.id ?\n      this.products.postProduct(this.form.value) :\n      this.products.putProduct(this.id, this.form.value)\n\n    request.subscribe(()=> \n      this.openSnackBar('Product successfully saved','OK', \n      () => this.router.navigate(['admin','products']))\n    )\n\n  }\n\n  cancel() {\n    this.router.navigate(['admin','products'])\n  }\n\n  // Categories\n  remove(category: string): void {\n    const categories = [...this.form.controls['categories'].value]\n    const index = categories.indexOf(category);\n\n    if (index >= 0) {\n      categories.splice(index, 1);\n      this.form.controls['categories'].setValue([...categories]);\n    }\n  }\n\n  get filteredCategories(): string[] {\n    const categories = [...this.form.controls['categories'].value]\n    if(!categories) return this.allCategories\n    return this.allCategories\n                 .filter(x => !categories.includes(x))\n                 .concat(categories.filter(x => !this.allCategories.includes(x)));\n  }\n\n\n  loadCategories() {\n    this.allCategories = [\n      'Monitores','Partes y Piezas',\n      'Hard drives','Computer Parts',\n      'PlayStation','Konsoles',\n      'Scooters','Sport',\n      'Apple','Laptop'\n    ]\n  }\n\n  add(event: MatChipInputEvent): void {\n    const input = event.input;\n    const value = event.value;\n\n    if ((value || '').trim() \n        && -1 !== this.allCategories.indexOf(value)\n        && -1 === this.categories.indexOf(value)\n      ) {\n      this.form.controls['categories'].setValue([...this.categories]);\n    }\n    if (input) {\n      input.value = '';\n    }\n  }\n\n  selected(event: MatAutocompleteSelectedEvent): void {\n    const input = event.option;\n    const value = input.value;\n    const categories = [...this.form.controls['categories'].value]\n    if ((value || '').trim()) {\n      if(-1 === categories.indexOf(value)) { //event.option.viewValue\n        categories.push(value)\n        this.form.controls['categories'].setValue([...categories]);        \n        this.categoryInput.nativeElement.value=''\n      }\n    }\n  }\n\n  // images\n  editImages() {\n    if(this.editImages) {\n      const formData = new FormData();\n      for (const file of this.files) {\n        formData.append('files', file);      \n      }\n      let imageRequest: Observable<any> = this.products.postImages( formData )    \n      imageRequest.subscribe((response) => {        \n        const images = response.map(item=> {\n          return item['secure_url']\n        })\n        this.form.controls['images'].setValue(images);        \n      })\n    }\n    this.editingImages = !this.editingImages\n  }\n\n  onSelectImage(event) {\n    this.files.push(...event.addedFiles);\n  }\n  \n  onRemoveImage(event) {\n    this.files.splice(this.files.indexOf(event), 1);\n  }\n}\n\n\n","<div class=\"wrapper mat-elevation-z8\">\n    <div class=\"header\">\n        <div class=\"flex flex-center\">\n            <h2>{{ title }}</h2>\n            <div class=\"spacer\" ></div>\n        </div>\n    </div>\n    <form autocomplete=\"off\" [formGroup]=\"form\" (ngSubmit)=\"save()\">\n        <table class=\"full-width\" cellspacing=\"0\">\n            <tr>\n                <td></td>\n                <td *ngIf=\"editingImages\" class=\"flex flex-end\">\n                    <button mat-button (click)=\"editImages()\"><mat-icon>save</mat-icon></button>\n                </td>\n                <td *ngIf=\"!editingImages\" class=\"flex flex-end\">\n                    <button mat-button (click)=\"editImages()\"><mat-icon>edit</mat-icon></button>\n                </td>\n            </tr>\n            <tr *ngIf=\"editingImages\">\n                <td colSpan=\"3\">\n                <div class=\"custom-dropzone\"\n                    ngx-dropzone \n                    [accept]=\"'image/*'\"\n                    (change)=\"onSelectImage($event)\"\n                    >\n                    <ngx-dropzone-label>\n                        <div>\n                            <h2>Drop product images here</h2>\n                        </div>\n                    </ngx-dropzone-label>\n                    <ngx-dropzone-image-preview \n                        (removed)=\"onRemoveImage(f)\"\n                        ngProjectAs=\"ngx-dropzone-preview\" \n                        *ngFor=\"let f of files\" [file]=\"f\" [removable]=\"true\" \n                        >\n                        <ngx-dropzone-label class=\"dropzone-label\">{{ f.name | slice : 0 : 10}}</ngx-dropzone-label>\n                    </ngx-dropzone-image-preview>\n                </div>\n                </td>\n            </tr>\n            <tr *ngIf=\"!editingImages\">\n                <td colSpan=\"3\" class=\"show-images\" >\n                <div \n                    class=\"image-preview\"\n                    *ngFor=\"let f of form.controls['images'].value\"\n                >\n                    <img [src]=\"f\" [alt]=\"f\">\n                </div>\n                </td>\n            </tr>\n            <tr>\n            <td><mat-form-field class=\"full-width\">\n                <mat-label>Title</mat-label>\n                <input matInput\n                    formControlName=\"title\"\n                    [class.is-invalid]=\"hasErrors('title')\"\n                >\n            </mat-form-field></td>\n            <td><mat-form-field class=\"full-width\">\n                <mat-label>Subtitle</mat-label>\n                <input matInput\n                    formControlName=\"subtitle\"\n                    [class.is-invalid]=\"hasErrors('subtitle')\"\n                >\n            </mat-form-field></td>\n            </tr>\n            <tr>\n                <td><mat-form-field class=\"full-width\">\n                    <mat-label>Price</mat-label>\n                    <input matInput\n                        type=\"number\"\n                        formControlName=\"price\"\n                        [class.is-invalid]=\"hasErrors('price')\"\n                    >\n                    <span matSuffix>&nbsp;$</span>\n                </mat-form-field></td>\n                <td>\n\n                <mat-form-field class=\"full-width\">\n                    <mat-label>Categories</mat-label>\n                    <mat-chip-list #categoriesList aria-label=\"Categories selection\">\n                      <mat-chip\n                        *ngFor=\"let category of form.controls['categories'].value\"\n                        [selectable]=\"true\"\n                        [removable]=\"true\"\n                        (removed)=\"remove(category)\">\n                        {{category}}\n                        <mat-icon matChipRemove *ngIf=\"removable\">cancel</mat-icon>\n                      </mat-chip>\n                      <input\n                        placeholder=\"Category...\"\n                        #categoryInput\n                        [matAutocomplete]=\"auto\"\n                        [matChipInputFor]=\"categoriesList\"\n                        [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\n                        (matChipInputTokenEnd)=\"add($event)\">\n                    </mat-chip-list>\n                    <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"selected($event)\">\n                      <mat-option *ngFor=\"let category of filteredCategories\" [value]=\"category\">\n                        {{category}}\n                      </mat-option>\n                    </mat-autocomplete>\n                  </mat-form-field>\n                </td>\n            </tr>\n            <tr>\n                <td colspan=\"2\"><mat-form-field class=\"full-width\">\n                    <mat-label>excerpt</mat-label>\n                    <textarea \n                        matInput cdkTextareaAutosize\n                        formControlName=\"excerpt\"\n                        [class.is-invalid]=\"hasErrors('excerpt')\"    \n                    ></textarea>  \n                </mat-form-field></td>\n            </tr>\n\n            <tr>\n                <td colspan=\"2\"><mat-form-field class=\"full-width\">\n                    <mat-label>content</mat-label>\n                    <textarea \n                        matInput cdkTextareaAutosize\n                        formControlName=\"content\"\n                        [class.is-invalid]=\"hasErrors('content')\"    \n                    ></textarea>  \n                </mat-form-field></td>\n            </tr>\n          </table>\n          <div class=\"action-buttons\">\n              <button type=\"button\" \n                mat-raised-button\n                color=\"secondary\"\n                (click)=\"cancel()\"\n              >Return</button>\n              <button mat-raised-button color=\"primary\">Save</button>\n          </div>\n    </form>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.scss']\n})\nexport class AdminComponent implements OnInit {\n\n  links = [\n    {\n      'label': 'Categories',\n      'path': ['categories']\n    },\n    {\n      'label': 'Products',\n      'path': ['products']\n    },\n  ]\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-sidenav-container class=\"example-container\">\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"example-sidenav\"\n                 [fixedInViewport]=\"false\"\n                 [fixedBottomGap]=\"60\">\n                 <mat-nav-list>\n                    <a mat-list-item \n                        *ngFor=\"let link of links\"\n                        [routerLink]=\"link.path\" \n                        routerLinkActive=\"active\"\n                        > {{ link.label }} </a>\n                 </mat-nav-list>\n    </mat-sidenav>\n\n    <mat-sidenav-content>\n        <router-outlet></router-outlet>\n    </mat-sidenav-content>\n  </mat-sidenav-container>"],"sourceRoot":"webpack:///"}